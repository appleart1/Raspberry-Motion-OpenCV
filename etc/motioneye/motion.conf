# thread-1.conf
ffmpeg_output_movies off
height 1200
stream_quality 85
threshold 3840
quality 94
noise_level 31
ffmpeg_output_debug_movies off
pre_capture 0
noise_tune on
smart_mask_speed 0
stream_maxrate 30
output_pictures on
stream_localhost on
ffmpeg_variable_bitrate 75
ffmpeg_video_codec mp4
text_changes off
movie_filename %Y-%m-%d/%H-%M-%S
auto_brightness off
stream_port 8081
rotate 0
stream_auth_method 0
lightswitch 5
framerate 5
emulate_motion off
snapshot_filename %Y-%m-%d/%{dbeventid}/%H-%M-%S.%q.%{dbeventid}
despeckle_filter
snapshot_interval 0
minimum_motion_frames 1
stream_motion on
target_dir /home/pi/motioneye/pics
text_double on
post_capture 0
stream_authentication user:
output_debug_pictures off
on_picture_save /usr/local/lib/python2.7/dist-packages/motioneye/scripts/relayevent.sh "/etc/motioneye/motioneye.conf" picture_save %t %f
on_movie_end /usr/local/lib/python2.7/dist-packages/motioneye/scripts/relayevent.sh "/etc/motioneye/motioneye.conf" movie_end %t %f
text_left Camera1
picture_filename %Y-%m-%d/%{dbeventid}/%H-%M-%S.%q.%{dbeventid}
locate_motion_style redbox
locate_motion_mode off
mmalcam_name vc.ril.camera
max_movie_time 0
on_event_end /usr/local/lib/python2.7/dist-packages/motioneye/scripts/relayevent.sh "/etc/motioneye/motioneye.conf" stop %t; /home/pi/motioneye/bin/on_event_end.py %{dbeventid}; echo $(date --iso-8601=seconds)" gpio 14 = "$(gpio read 14)" end_cmd" >> /home/pi/motioneye/gpio14/$(date --iso-8601).txt
text_right %Y-%m-%d\n%T
on_event_start /usr/local/lib/python2.7/dist-packages/motioneye/scripts/relayevent.sh "/etc/motioneye/motioneye.conf" start %t; echo $(date --iso-8601=seconds)" gpio 14 = "$(gpio read 14) >> /home/pi/motioneye/gpio14/$(date --iso-8601).txt
event_gap 60
mask_file /etc/motioneye/mask_1.pgm
width 1600

sql_log_picture on
database_dbname motion
database_password mypasswordformotion!
database_type mysql
database_user motion
database_host localhost
database_port 3306
sql_query_start insert into motion_events(camera, start_time) values('%t', '%Y-%m-%d %T')

sql_query_stop update motion_events set end_time='%Y-%m-%d %T' where event_id=%{dbeventid}
sql_query insert into images (camera, event_id, filename, frame_number, file_type, image_width, image_height, motion_center_x, motion_center_y, changed_pixels, noise_level, motion_area_height, motion_area_width, threshold) values('%t', %{dbeventid}, '%f', %q, %n, %w, %h, %K, %L, %D, %N, %J, %i, %o)